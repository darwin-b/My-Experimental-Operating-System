alias physical_sp S1;
alias fatindex S2;
alias counter S9;
alias filename S3;
alias syscall S4;
alias temp S5;
alias return_val S7;
alias opentableindex S8;
alias pid S0;
alias basicblock S6;
alias i S10;
alias j S15;

alias page1 S11;
alias page2 S12;
alias page3 S13;
alias page4 S14;


page1 = -1;
page2 = -1;
page3 = -1;
page4 = -1;


pid = (PTBR-1024)/8;

physical_sp = ([PTBR + 2*(SP/512)]*512) + (SP%512);

syscall = physical_sp - 1 ;
filename = physical_sp - 3 ;
return_val = physical_sp - 2 ;

temp = FAT;

if([syscall] == 9) then							
											//......... whether file already exists.................

	while(temp < (FAT + 512)) do
		if([filename]==[temp]) then
			basicblock = [temp+2];
			i=([temp+1]/512)-1;
			break;
		endif;
		temp =temp +8;
	endwhile;

	if(temp >= 512 + FAT) then
		print "NO file present";
		[return_val] = -1;
		ireturn;
	endif;


	load(1,basicblock);

	temp=0;
	

	//while(temp<512) do 
	//	if([512 + temp] != -1) then
	//		i = i+1;					// stores # of datablocks
	//	endif;
	//	temp = temp+1;
	//endwhile;


	counter = 0;
	temp = -1;
	while(counter<3) do
		if( ([PTBR + 2*counter +1] == "01") || ([PTBR + 2*counter +1] == "11") ) then
		temp = temp + 1;     	//temp holds the number of valid pages of current process.
		endif;
		counter=counter+1;
	endwhile;

	j = temp;
	if(temp > i) then
		while(temp > i) do
			[PTBR + 2*temp] = -1;
			[PTBR + 2*temp +1] = "00";
			[MEM_LIST + [PTBR + 2*temp]] =0;
			temp = temp - 1;
		endwhile;
	endif;

	temp=j;

	counter = 0;
	
j=i-temp;


	if(j==2) then
		[PTBR + 2*(j-1)] = page1;
		[PTBR + 2*(j-1) +1] = "00";
		[MEM_LIST + page1] = 1;

		[PTBR + 2*j] = page2;
		[PTBR + 2*j +1] = "00";
		[MEM_LIST +page2] = 1;
     
	endif;

	if(j==1) then
		j=j+1;
		[PTBR + 2*j] = page1;
	
		[PTBR + 2*j +1] = "00";
		[MEM_LIST + page1] = 1;
	endif;

	j=0;
	i=i+1;
	while(j<i) do 
		load([PTBR+2*j],[512+j]);
		[PTBR +2*j] = [512 + j];
		[PTBR +2*j +1] = "01";
		j=j+1;
	endwhile;






	i=0;
	while(i<8) do
		if([READY_LIST+ 32*pid+15+2*i]!=-1) then
			opentableindex=[READY_LIST+ 32*pid+15+2*i];

			[FILE_TABLE + 2*[opentableindex]+1] =  [FILE_TABLE + 2*[opentableindex]+1] - 1;

			if([FILE_TABLE + 2*[opentableindex]+1]==0) then
				[FILE_TABLE + 2*[opentableindex]] = -1;
			endif;
		endif;
		i=i+1;
	endwhile;


	SP = 3*512;
	physical_sp = ([PTBR + 2*(SP/512)]*512) + (SP%512);
	[physical_sp] = 0;
	ireturn;
endif;

	





	